步骤一、检查本地ssh key是否存在

    1、windows下 开始 -- 搜索框输入 git bash，打开git bash窗口；

    2、git base窗口中输入指令 ls ~/.ssh/ 来检查ssh key是否存在；

    3、如果key不存在则按照步骤二重新生成，ssh key已存在则跳过步骤二，执行步骤三；

步骤二、生成ssh key

    1、继续步骤一的git bash窗口执行指令：

            ssh-keygen -t rsa -b 2048 -C "你自己的邮箱地址"

           修改邮箱地址为你自己的邮箱地址，注意此处邮箱地址前后的双引号为英文格式双引号；
    2、指令执行后页面提示：

Generating public/private rsa key pair.
           Enter file in which to save the key (/c/Users/***/.ssh/id_rsa):

         ***表示你自己的当前登录用户名，不做修改直接回车，会将生成的rsa文件保存为默认名称

         再次回车提示：

         Enter passphrase (empty for no passphrase): 
         Enter same passphrase again: 
         提示设置提交/l拉取代码到Github时需要的密码及确认密码；

         设置密码后再次回车提示Your identification has been saved in.... 即表示ssh key生成成功；

步骤三、添加sshkey至ssh-agent

    1、执行eval “$(ssh-agent -s)”确认ssh-agent处于开启状态，打印pid... 表示启用中；

    2、执行指令ssh-add ~/.ssh/id_rsa 添加ssh key至ssh agent，此步会要求输入步骤二设置的密码；

          需要注意的是此处可能报错：Could not open a connection to your authentication agent，
   我的解决办法是关掉当前git bash窗口，重新以管理员身份运行git bash 即解决问题；
   或者执行 ssh-agent bash

步骤四、添加ssh key至guthub

     1、登录https://github.com/，在页面右上角自己头像右边箭头处右击，弹框中进入setting功能

     2、setting界面右边菜单选择SSH and GPG keys，选择新建SSH keys，

步骤五、git bash里输入下面的命令登陆
ssh -T git@github.com

步骤六、设置username和email，因为github每次commit都会记录他们

$ git config --global user.name "你的GitHub登陆名"

$ git config --global user.email "你的GitHub注册邮箱" 

步骤七、把本地仓库传到github上去

$ git remote add origin git@github.com:userName/yourProject.git 

//关联一个远程库命令，git@后面填写你的github repository（仓库），在github里面创建仓库后有http和ssh的链接，origin是你给这个仓库起的名字，可以自定义，下面命令中的origin也要相应改变

git push -u origin master //把本地已经commit 的结果push到github的origin 仓库的master分支中

步骤八、删除仓库里的文件夹
git pull origin master                    # 将远程仓库里面的项目拉下来
dir                                                # 查看有哪些文件夹
git rm -r --cached target              # 删除target文件夹
git commit -m '删除了target'        # 提交,添加操作说明
git push -u origin master # 将本次更改更新到github项目上去

